server.port=8081
# 页面默认前缀目录
#spring.mvc.view.prefix=/WEB-INF/jsp/
# 响应页面默认后缀
#spring.mvc.view.suffix=.jsp
# 自定义属性，可以在Controller中读取
application.hello=Hello Shanhy
# 默认值为 /**
#spring.mvc.static-path-pattern=
# 默认值为 classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/ 
#spring.resources.static-locations=classpath:/mystatic/

# 静态文件请求匹配方式
#spring.mvc.static-path-pattern=/**
# 修改默认的静态寻址资源目录
#spring.resources.static-locations = classpath:/templates/,classpath:/static/,classpath:/mystatic

#spring.resources.chain.strategy.content.enabled=true
#spring.resources.chain.strategy.content.paths=/**
#logging.level.org.springframework.web=DEBUG
#logging.level.org.springboot.sample=TRACE
#logging.path=file:G:/fwqxz/

logging.level.com.example.demo.dao= debug

#mysql
#spring.datasource.url=jdbc:mysql://172.18.250.87:3306/selfmedia?characterEncoding=utf8&useSSL=true
#spring.datasource.username=selfmed
#spring.datasource.password=SM#07@12
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver


#MyBatis
mybatis.mapper-locations=classpath:mapper/*.xml
#mybatis.type-aliases-package=com.example.demo.entity
mybatis.config-location=classpath:mybatis-config.xml

#redis
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接超时时间（毫秒）
spring.redis.timeout=0
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=20
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=1
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=1000


# 数据库访问配置, 使用druid数据源 
#spring.datasource.druid.db-type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.url=jdbc:mysql://172.18.250.87:3306/test?characterEncoding=utf8&useSSL=true
spring.datasource.druid.username=selfmed
spring.datasource.druid.password=SM#07@12
# 连接池配置
spring.datasource.druid.initial-size=5
spring.datasource.druid.min-idle=5
spring.datasource.druid.max-active=20
# 连接等待超时时间
spring.datasource.druid.max-wait=30000
# 配置检测可以关闭的空闲连接间隔时间
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置连接在池中的最小生存时间
spring.datasource.druid.min-evictable-idle-time-millis=300000
spring.datasource.druid.validation-query=select '1' from dual
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-open-prepared-statements=20
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
# 配置监控统计拦截的filters, 去掉后监控界面sql无法统计, 'wall'用于防火墙
spring.datasource.druid.filters=stat
# Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
#spring.datasource.druid.aop-patterns=cc.mrbird.servie.*
      
# WebStatFilter配置
spring.datasource.druid.web-stat-filter.enabled=true
# 添加过滤规则
spring.datasource.druid.web-stat-filter.url-pattern: /*
# 忽略过滤的格式
spring.datasource.druid.web-stat-filter.exclusions='*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'
# StatViewServlet配置 
spring.datasource.druid.stat-view-servlet.enabled=true
        
# 访问路径为/druid时，跳转到StatViewServlet
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
# 是否能够重置数据
spring.datasource.druid.stat-view-servlet.reset-enable=false
# 需要账号密码才能访问控制台
spring.datasource.druid.stat-view-servlet.login-username=druid
spring.datasource.druid.stat-view-servlet.login-password=druid123
# IP白名单
# spring.datasource.druid.stat-view-servlet.allow=127.0.0.1
# IP黑名单（共同存在时，deny优先于allow）
# spring.datasource.druid.stat-view-servlet.deny=192.168.1.218 
# 配置StatFilter
spring.datasource.druid.filter.stat.log-slow-sql=true 
          

spring.thymeleaf.cache=false
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html
    

#spring.aop.proxy-target-class=true

###################  spring配置  ###################
#spring.profiles.active=dev
#spring.thymeleaf.mode=HTML
#spring.thymeleaf.cache=false
#spring.mvc.view.prefix=/templates
#spring.http.multipart.max-request-size=100MB #最大请求大小
#spring.http.multipart.max-file-size=100MB #最大文件大小

#文件上传类型
fileupload.allowFileType=txt,docs